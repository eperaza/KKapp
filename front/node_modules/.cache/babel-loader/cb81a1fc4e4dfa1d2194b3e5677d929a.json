{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/front/src/Container/index.js\";\nimport React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport TriggerButton from '../TriggerButton';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nexport class Container extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isShown: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        isShown: true\n      }, () => {\n        this.closeButton.focus();\n      });\n      this.toggleScrollLock();\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isShown: false\n      });\n      this.TriggerButton.focus();\n      this.toggleScrollLock();\n    };\n\n    this.onKeyDown = event => {\n      if (event.keyCode === 27) {\n        this.closeModal();\n      }\n    };\n\n    this.onClickOutside = event => {\n      if (this.modal && this.modal.contains(event.target)) return;\n      this.closeModal();\n    };\n\n    this.toggleScrollLock = () => {\n      document.querySelector('html').classList.toggle('scroll-lock');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TriggerButton, {\n        showModal: this.showModal,\n        buttonRef: n => this.TriggerButton = n,\n        triggerText: this.props.triggerText,\n        classButton: this.props.classButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), this.state.isShown ? /*#__PURE__*/_jsxDEV(Modal, {\n        onSubmit: this.props.onSubmit,\n        modalRef: n => this.modal = n,\n        buttonRef: n => this.closeButton = n,\n        closeModal: this.closeModal,\n        onKeyDown: this.onKeyDown,\n        onClickOutside: this.onClickOutside,\n        formId: this.props.formId,\n        formSerie: this.props.formSerie,\n        formEstatus: this.props.formEstatus,\n        formVigencia: this.props.formVigencia,\n        formEstablecimiento: this.props.formEstablecimiento,\n        formProducto: this.props.formProducto,\n        formType: this.props.formType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Container;","map":{"version":3,"sources":["/var/www/html/front/src/Container/index.js"],"names":["React","Component","Modal","TriggerButton","AgGridColumn","AgGridReact","Container","state","isShown","showModal","setState","closeButton","focus","toggleScrollLock","closeModal","onKeyDown","event","keyCode","onClickOutside","modal","contains","target","document","querySelector","classList","toggle","render","n","props","triggerText","classButton","onSubmit","formId","formSerie","formEstatus","formVigencia","formEstablecimiento","formProducto","formType"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,eAA1C;AACA,OAAO,2CAAP;AACA,OAAO,mDAAP;AAEA,OAAO,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCM,KADuC,GAC/B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD+B;;AAAA,SAEvCC,SAFuC,GAE3B,MAAM;AAEhB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAiC,MAAM;AACrC,aAAKG,WAAL,CAAiBC,KAAjB;AACD,OAFD;AAGA,WAAKC,gBAAL;AACD,KARsC;;AAAA,SAUvCC,UAVuC,GAU1B,MAAM;AACjB,WAAKJ,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKL,aAAL,CAAmBS,KAAnB;AACA,WAAKC,gBAAL;AACD,KAdsC;;AAAA,SAevCE,SAfuC,GAe1BC,KAAD,IAAW;AACrB,UAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKH,UAAL;AACD;AACF,KAnBsC;;AAAA,SAoBvCI,cApBuC,GAoBrBF,KAAD,IAAW;AAC1B,UAAI,KAAKG,KAAL,IAAc,KAAKA,KAAL,CAAWC,QAAX,CAAoBJ,KAAK,CAACK,MAA1B,CAAlB,EAAqD;AACrD,WAAKP,UAAL;AACD,KAvBsC;;AAAA,SAyBvCD,gBAzBuC,GAyBpB,MAAM;AACvBS,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,SAA/B,CAAyCC,MAAzC,CAAgD,aAAhD;AACD,KA3BsC;AAAA;;AA4BvCC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,SAAS,EAAE,KAAKjB,SADlB;AAEE,QAAA,SAAS,EAAGkB,CAAD,IAAQ,KAAKxB,aAAL,GAAqBwB,CAF1C;AAGE,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,WAH1B;AAIE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE;AAJ1B;AAAA;AAAA;AAAA;AAAA,cADF,EAOG,KAAKvB,KAAL,CAAWC,OAAX,gBACC,QAAC,KAAD;AACE,QAAA,QAAQ,EAAE,KAAKoB,KAAL,CAAWG,QADvB;AAEE,QAAA,QAAQ,EAAGJ,CAAD,IAAQ,KAAKR,KAAL,GAAaQ,CAFjC;AAGE,QAAA,SAAS,EAAGA,CAAD,IAAQ,KAAKhB,WAAL,GAAmBgB,CAHxC;AAIE,QAAA,UAAU,EAAE,KAAKb,UAJnB;AAKE,QAAA,SAAS,EAAE,KAAKC,SALlB;AAME,QAAA,cAAc,EAAE,KAAKG,cANvB;AAOE,QAAA,MAAM,EAAE,KAAKU,KAAL,CAAWI,MAPrB;AAQE,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK,SARxB;AASE,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAT1B;AAUE,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWO,YAV3B;AAWE,QAAA,mBAAmB,EAAE,KAAKP,KAAL,CAAWQ,mBAXlC;AAYE,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,YAZ3B;AAaE,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU;AAbvB;AAAA;AAAA;AAAA;AAAA,cADD,GAgBG,IAvBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAxDsC;AA2DzC,eAAehC,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport TriggerButton from '../TriggerButton';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nexport class Container extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    \n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  \n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n          triggerText={this.props.triggerText}\n          classButton={this.props.classButton}\n        />\n        {this.state.isShown ? (\n          <Modal\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            formId={this.props.formId}\n            formSerie={this.props.formSerie}\n            formEstatus={this.props.formEstatus}\n            formVigencia={this.props.formVigencia}\n            formEstablecimiento={this.props.formEstablecimiento}\n            formProducto={this.props.formProducto}\n            formType={this.props.formType}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}