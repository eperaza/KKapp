{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/front/src/index.js\";\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport Axios from \"axios\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport BtnCellRenderer from './btn-cell-renderer.jsx'; //modal imports\n\nimport { Container } from './Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\nclass GridExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.eraseSelectedRowData = () => {\n      let selectedNodes = this.gridApi.getSelectedNodes();\n      let selectedData = selectedNodes.map(node => node.data);\n      var payload = selectedData[0].id;\n      console.log(payload);\n      Axios.post('http://3.23.104.36:3001/cuponesBorrar', {\n        id: payload\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.editSelectedRowData = () => {\n      let selectedNodes = this.gridApi.getSelectedNodes();\n      let selectedData = selectedNodes.map(node => node.data);\n      var id = selectedData[0].id;\n      var serie = selectedData[0].serie;\n      var establecimiento = selectedData[0].establecimiento;\n      var estatus = selectedData[0].estatus;\n      var vigencia = selectedData[0].vigencia;\n      Axios.post('http://3.23.104.36:3001/cuponesEditar', {\n        id: id,\n        serie: serie,\n        establecimiento: establecimiento,\n        estatus: estatus,\n        vigencia: vigencia\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.onRowSelected = event => {\n      let selectedNodes = this.gridApi.getSelectedNodes();\n      let selectedData = selectedNodes.map(node => node.data);\n      var id = selectedData[0].id;\n    };\n\n    this.onGridReady = params => {\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n\n      const updateData = data => {\n        this.setState({\n          rowData: data\n        });\n      };\n\n      Axios.post('http://3.23.104.36:3001/cuponesCargar').then(res => {\n        console.log(res.data);\n        updateData(res.data);\n      });\n      const a = this.setState({\n        text: 'texto'\n      });\n      alert(a);\n    };\n\n    this.updateText1 = text => {\n      this.setState({\n        text: text\n      });\n      console.log(text);\n    };\n\n    this.state = {\n      columnDefs: [{\n        field: 'id'\n      }, {\n        field: 'serie'\n      }, {\n        field: 'estatus'\n      }, {\n        field: 'establecimiento'\n      }, {\n        field: 'vigencia'\n      }\n      /*{ \n      field: '', \n      cellRenderer: 'btnCellRenderer', \n      cellRendererParams: {\n        clicked: function(field) {\n          alert(`${field} was clicked`);\n        }\n      },\n      maxWidth: 70\n      },\n      { \n      field: '', \n      cellRenderer: 'btnCellRenderer', \n      cellRendererParams: {\n        clicked: function(field) {\n          alert(`${field} was clicked`);\n        }\n      },\n      maxWidth: 50\n      }*/\n      ],\n      defaultColDef: {\n        flex: 1,\n        minWidth: 60\n      },\n      components: {\n        btnCellRenderer: BtnCellRenderer\n      },\n      rowData: [],\n      text: \"Initial Text\"\n    };\n    this.updateText1 = this.updateText1;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        width: '99vw',\n        height: '90vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger btn-sm\",\n        onClick: this.eraseSelectedRowData,\n        style: {\n          margin: 10\n        },\n        children: \"Borrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        triggerText: 'Editar',\n        formId: this.formId,\n        updateTextCB: this.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: this.editSelectedRowData,\n        style: {\n          margin: 10\n        },\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"myGrid\",\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        className: \"ag-theme-alpine\",\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          columnDefs: this.state.columnDefs,\n          defaultColDef: this.state.defaultColDef,\n          components: this.state.components,\n          onGridReady: this.onGridReady,\n          rowData: this.state.rowData,\n          rowSelection: \"single\",\n          onRowSelected: this.onRowSelected.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(GridExample, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 184,\n  columnNumber: 17\n}, this), document.querySelector('#root'));\nreportWebVitals();","map":{"version":3,"sources":["/var/www/html/front/src/index.js"],"names":["ReactDOM","reportWebVitals","Axios","React","useState","useEffect","Component","AgGridColumn","AgGridReact","BtnCellRenderer","Container","GridExample","constructor","props","eraseSelectedRowData","selectedNodes","gridApi","getSelectedNodes","selectedData","map","node","data","payload","id","console","log","post","then","res","editSelectedRowData","serie","establecimiento","estatus","vigencia","onRowSelected","event","onGridReady","params","api","gridColumnApi","columnApi","updateData","setState","rowData","a","text","alert","updateText1","state","columnDefs","field","defaultColDef","flex","minWidth","components","btnCellRenderer","render","width","height","margin","formId","bind","document","querySelector"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Axios from \"axios\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport BtnCellRenderer from './btn-cell-renderer.jsx';\n//modal imports\nimport { Container } from './Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\nclass GridExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnDefs: [\n        {\n          field: 'id'\n        },\n        {\n          field: 'serie'\n        },\n        {\n          field: 'estatus'\n        },\n        {\n          field: 'establecimiento'\n        },\n        {\n          field: 'vigencia'\n        }\n        /*{ \n        field: '', \n        cellRenderer: 'btnCellRenderer', \n        cellRendererParams: {\n          clicked: function(field) {\n            alert(`${field} was clicked`);\n          }\n        },\n        maxWidth: 70\n        },\n        { \n        field: '', \n        cellRenderer: 'btnCellRenderer', \n        cellRendererParams: {\n          clicked: function(field) {\n            alert(`${field} was clicked`);\n          }\n        },\n        maxWidth: 50\n        }*/\n      ],\n      defaultColDef: {\n        flex: 1,\n        minWidth: 60,\n      },\n      components: {\n        btnCellRenderer: BtnCellRenderer\n      },\n      rowData: [],\n      text: \"Initial Text\"\n    };\n    this.updateText1 = this.updateText1\n  }\n\n \n\n  eraseSelectedRowData = () => {\n     \n    let selectedNodes = this.gridApi.getSelectedNodes();\n    let selectedData = selectedNodes.map(node => node.data);\n    var payload =selectedData[0].id;\n    console.log(payload);\n    Axios.post('http://3.23.104.36:3001/cuponesBorrar',{id:payload})\n    .then(res => {\n      console.log(res);\n      \n    });\n  };\n\n  editSelectedRowData = () => {\n     \n    let selectedNodes = this.gridApi.getSelectedNodes();\n    let selectedData = selectedNodes.map(node => node.data);\n    var id =selectedData[0].id;\n    var serie =selectedData[0].serie;\n    var establecimiento =selectedData[0].establecimiento;\n    var estatus =selectedData[0].estatus;\n    var vigencia =selectedData[0].vigencia;\n    Axios.post('http://3.23.104.36:3001/cuponesEditar',{\n      id:id,\n      serie:serie,\n      establecimiento: establecimiento,\n      estatus: estatus,\n      vigencia: vigencia\n      })\n    .then(res => {\n      console.log(res);\n    });\n  };\n\n   onRowSelected = (event) => {\n    let selectedNodes = this.gridApi.getSelectedNodes();\n    let selectedData = selectedNodes.map(node => node.data);\n    var id =selectedData[0].id;\n\n  };\n\n  onGridReady = params => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n\n    const updateData = data => {\n      this.setState({ rowData: data });\n    };\n\n    Axios.post('http://3.23.104.36:3001/cuponesCargar')\n    .then(res => {\n      console.log(res.data);\n      updateData(res.data);\n    });\n    const a = this.setState({text:'texto' });\n    alert(a);\n  };\n  \n  updateText1 = (text) => {\n    this.setState({ text: text })\n    console.log(text);\n    }\n\n  render() {\n    return (\n      <div className=\"ag-theme-alpine\" style={{ width: '99vw', height: '90vh' }}>\n        <button \n          className = \"btn btn-danger btn-sm\"\n          onClick={this.eraseSelectedRowData}\n          style={{margin: 10}}\n          >Borrar\n        </button>\n        <Container triggerText={'Editar'} formId={this.formId} updateTextCB={this.text}/>\n        <button \n          className = \"btn btn-success btn-sm\"\n          onClick={this.editSelectedRowData}\n          style={{margin: 10}}\n          >Agregar\n        </button>\n        <div\n          id=\"myGrid\"\n          style={{\n            height: '100%',\n            width: '100%',\n          }}\n          className=\"ag-theme-alpine\"\n        >\n          <AgGridReact\n            columnDefs={this.state.columnDefs}\n            defaultColDef={this.state.defaultColDef}\n            components={this.state.components}\n            onGridReady={this.onGridReady}\n            rowData={this.state.rowData}\n            rowSelection=\"single\"\n            onRowSelected={this.onRowSelected.bind(this)}\n          />\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<GridExample></GridExample>, document.querySelector('#root'));\n\n\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}